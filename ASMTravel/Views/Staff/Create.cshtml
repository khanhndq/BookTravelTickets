@model ASMTravel.Models.Staff

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Staff</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.StaffID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StaffID, new { htmlAttributes = new { @class = "form-control", @onchange = "CheckIDStaff()", required="required", @pattern="^ST\\d{3}$",  oninvalid="this.setCustomValidity('ID must start with 2 letter ST and 3 number . Ex: ST001')", oninput="setCustomValidity('')"} }) (ID = STxxx)
            @Html.ValidationMessageFor(model => model.StaffID, "", new { @class = "text-danger" })
        </div>
        <label class="col-sm-2"></label>
        <div class=" col-sm-10">
            <p id="checkID" />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", @onchange = "CheckUsername()" , required="required"} })
            @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
        </div>
        <label class="col-sm-2"></label>
        <div class=" col-sm-10">
            <p id="checkIDUser" />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.password, new { @class = "form-control", placeholder = "", required = "required", @pattern = "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$" ,  oninvalid="this.setCustomValidity('Password must contain at least one lowercase letter, one uppercase letter, 1 special character and at least 8 characters')", oninput="setCustomValidity('')"})
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" }  )
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Re-Password</label>
        <div class="col-md-10">
            <input class="form-control text-box single-line" required type="password" name="repassword" id="repassword" onkeyup='check();' />
            <span id="message"></span>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control", required="required" } })
            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2", required="required" })
        <div class="col-md-10">
            @Html.RadioButton("Sex", "Male") Male
            @Html.RadioButton("Sex", "Female") Female

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", required="required" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required="required",  } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", required="required", @pattern = "^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>






    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    <button class="btn btn-success notika-btn-success" type="button" onclick="location.href=' @Url.Action("Index")'">Back to List</button>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
    function CheckIDStaff() {
        $("#checkID").html("Checking...");
        $.post("@Url.Action("CheckStaffIDValid","Staff")",
            {
                id: $("#StaffID").val()
            },
            function (data) {
                var checkNull = $("#StaffID").val();
                if (data == 0) {
                    $("#checkID").html('<font color = "Green"> You can use this ID</font>');
                    $("#StaffID").css("border-color", "Green");
                } else {
                    $("#checkID").html('<font color = "Red"> This ID was exists!!!</font>');
                    $("#StaffID").css("border-color", "Red");
                }
                if (checkNull == "") {
                    $("#checkID").html('<font color = "Black"></font>');
                     $("#StaffID").css("border-color", "#ccc");
                }
            }
        )
    }
    function CheckUsername() {
        $("#checkIDUser").html("Checking...");
        $.post("@Url.Action("CheckUsernameValid","Staff")",
            {
                id: $("#username").val()
            },
            function (data) {
                var checkNull = $("#username").val();
                if (data == 0) {
                    $("#checkIDUser").html('<font color = "Green"> You can use this Username</font>');
                    $("#username").css("border-color", "Green");
                } else {
                    $("#checkIDUser").html('<font color = "Red"> Username was exists!!!</font>');
                    $("#username").css("border-color", "Red");
                }
                if (checkNull == "") {
                    $("#checkIDUser").html('<font color = "Black"></font>');
                     $("#username").css("border-color", "#ccc");
                }
            }
        )
    }

       $('#password, #repassword').on('keyup', function () {
  if ($('#password').val() == $('#repassword').val()) {
    $('#message').html('Matching').css('color', 'green');
  } else 
    $('#message').html('Not Matching').css('color', 'red');
});
    </script>